C*
C**** SUBROUTINE LDSIMQ **********************************************
C*--------------------------------------------------------------------
C*    Назначение:
C*      решение системы линейных уравнений AX=B.
C*--------------------------------------------------------------------
C*    Вызов:
C*      CALL LDSIMQ(A, B, N, KR)
C*--------------------------------------------------------------------
C*    Формальные параметры:
C*
C*      Имя  Размер Тип Тип_В/В   Назначение
C*
C*      A      N*N   D    В/В     Матрица системы уравнений.
C*      B      N     D    В/В     На входе вектор правых частей,
C*                                по окочании работы вектор решения.
C*      N      -     I    Вх      Порядок системы.
C*      KR     -     I    Вых     Код ошибки:
C*                                KR=0 - нет ошибки;
C*                                KR=1 - матрица A вырожденная
C*
C*    Примечание. Содержимое матрицы A не сохраняется.
C*--------------------------------------------------------------------
C*    Требуемые подпрограммы и функции:
C*      стандартные: DABS
C*      внешние    : нет
C*--------------------------------------------------------------------
C*    Связь с внешними модулями:
C*      может использоваться самостоятельно
C*--------------------------------------------------------------------
C*    Алгоритм:
C*      Гаусса - Жордана.
C*--------------------------------------------------------------------
C*    Внешняя среда:
C*      ЭВМ: CM-4     OC : OC PB 2.0   Компилятор: FORTRAN IV V02.2-1
C*--------------------------------------------------------------------
C*    Организация: МЭИ, кафедра РПДУ
C*--------------------------------------------------------------------
C*    Программист: Медунов А.Л.                     Дата:    01.01.90
C*--------------------------------------------------------------------
      SUBROUTINE LDSIMQ(A, B, N, KR)
C --------------------------------------------------------------------
C    Решение системы линейных уравнений AX=B. 
C --------------------------------------------------------------------
C 
      IMPLICIT NONE
C 
      DOUBLE PRECISION A(1)
      DOUBLE PRECISION B(1)
      INTEGER  N
      INTEGER  KR
C
      DOUBLE PRECISION ZERO, BIGA, TEMP, DABS
      INTEGER I, J, K, JJ, JX, J1, IT, IJ, I1, I2, IX, N1
      INTEGER IMAX, IQS, IXJ, IXJX, JJX
C
      PARAMETER (ZERO = 0.0D00)
C
C Прямой ход 
C
      KR =  0
      JJ = -N
      N1 =  N + 1
      DO 65 J = 1, N
         JJ = JJ + N1
         IT = JJ - J
         BIGA = ZERO
         DO 30 I = J, N
C
C Поиск максимального коэффициента в столбце    
C
            IJ = IT + I
            IF ( DABS(BIGA) - DABS(A(IJ)) ) 20, 30, 30 
   20          BIGA = A(IJ)
               IMAX = I
   30    CONTINUE
C
C Тест на вырожденность матрицы
C
         IF ( DABS(BIGA) - ZERO ) 35, 35, 40
   35       KR = 1
         RETURN
C
C Перестановка строк, если требуется
C
   40    I1 = J + N * (J - 2)
         IT = IMAX - J
         DO 50 K = J, N
            I1 = I1 + N
            I2 = I1 + IT

            TEMP  = A(I1)
            A(I1) = A(I2)
            A(I2) = TEMP
C
C Деление на ведущий коэфициент
C
            A(I1) = A(I1) / BIGA
   50    CONTINUE
      TEMP = B(IMAX)
      B(IMAX) = B(J)
      B(J) = TEMP / BIGA
      IF ( J - N ) 55, 70, 55
   55    IQS = N * (J - 1)
         J1  = J + 1
         DO 65 IX = J1, N
            IXJ = IQS + IX
            IT  = J - IX
            DO 60 JX = J1, N
               IXJX = N * (JX-1) + IX
               JJX  = IXJX + IT
               A(IXJX) = A(IXJX) - (A(IXJ) * A(JJX))
   60       CONTINUE
      B(IX) = B(IX) - (B(J) * A(IXJ))
   65 CONTINUE
C
C Обратный ход
C
   70 N1 = N - 1
      IT = N * N
      DO 80 J = 1, N1
         I1 = IT - J
         I2 = N - J
         IX = N
         DO 80 K = 1, J
            B(I2) = B(I2) - A(I1) * B(IX)
            I1 = I1 - N
            IX = IX - 1
   80 CONTINUE        
C
      RETURN
      END
